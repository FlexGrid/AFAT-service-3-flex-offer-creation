# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class FlexOfferParams(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, start_datetime: datetime=None, end_datetime: datetime=None, flex_offers: List[str]=None, flex_request: str=None):  # noqa: E501
        """FlexOfferParams - a model defined in Swagger

        :param start_datetime: The start_datetime of this FlexOfferParams.  # noqa: E501
        :type start_datetime: datetime
        :param end_datetime: The end_datetime of this FlexOfferParams.  # noqa: E501
        :type end_datetime: datetime
        :param flex_offers: The flex_offers of this FlexOfferParams.  # noqa: E501
        :type flex_offers: List[str]
        :param flex_request: The flex_request of this FlexOfferParams.  # noqa: E501
        :type flex_request: str
        """
        self.swagger_types = {
            'start_datetime': datetime,
            'end_datetime': datetime,
            'flex_offers': List[str],
            'flex_request': str
        }

        self.attribute_map = {
            'start_datetime': 'start_datetime',
            'end_datetime': 'end_datetime',
            'flex_offers': 'flex_offers',
            'flex_request': 'flex_request'
        }
        self._start_datetime = start_datetime
        self._end_datetime = end_datetime
        self._flex_offers = flex_offers
        self._flex_request = flex_request

    @classmethod
    def from_dict(cls, dikt) -> 'FlexOfferParams':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The FlexOfferParams of this FlexOfferParams.  # noqa: E501
        :rtype: FlexOfferParams
        """
        return util.deserialize_model(dikt, cls)

    @property
    def start_datetime(self) -> datetime:
        """Gets the start_datetime of this FlexOfferParams.


        :return: The start_datetime of this FlexOfferParams.
        :rtype: datetime
        """
        return self._start_datetime

    @start_datetime.setter
    def start_datetime(self, start_datetime: datetime):
        """Sets the start_datetime of this FlexOfferParams.


        :param start_datetime: The start_datetime of this FlexOfferParams.
        :type start_datetime: datetime
        """
        if start_datetime is None:
            raise ValueError("Invalid value for `start_datetime`, must not be `None`")  # noqa: E501

        self._start_datetime = start_datetime

    @property
    def end_datetime(self) -> datetime:
        """Gets the end_datetime of this FlexOfferParams.


        :return: The end_datetime of this FlexOfferParams.
        :rtype: datetime
        """
        return self._end_datetime

    @end_datetime.setter
    def end_datetime(self, end_datetime: datetime):
        """Sets the end_datetime of this FlexOfferParams.


        :param end_datetime: The end_datetime of this FlexOfferParams.
        :type end_datetime: datetime
        """
        if end_datetime is None:
            raise ValueError("Invalid value for `end_datetime`, must not be `None`")  # noqa: E501

        self._end_datetime = end_datetime

    @property
    def flex_offers(self) -> List[str]:
        """Gets the flex_offers of this FlexOfferParams.


        :return: The flex_offers of this FlexOfferParams.
        :rtype: List[str]
        """
        return self._flex_offers

    @flex_offers.setter
    def flex_offers(self, flex_offers: List[str]):
        """Sets the flex_offers of this FlexOfferParams.


        :param flex_offers: The flex_offers of this FlexOfferParams.
        :type flex_offers: List[str]
        """
        if flex_offers is None:
            raise ValueError("Invalid value for `flex_offers`, must not be `None`")  # noqa: E501

        self._flex_offers = flex_offers

    @property
    def flex_request(self) -> str:
        """Gets the flex_request of this FlexOfferParams.


        :return: The flex_request of this FlexOfferParams.
        :rtype: str
        """
        return self._flex_request

    @flex_request.setter
    def flex_request(self, flex_request: str):
        """Sets the flex_request of this FlexOfferParams.


        :param flex_request: The flex_request of this FlexOfferParams.
        :type flex_request: str
        """
        if flex_request is None:
            raise ValueError("Invalid value for `flex_request`, must not be `None`")  # noqa: E501

        self._flex_request = flex_request
